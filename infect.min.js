// infect.js v0.1.0 (2013-11-10) //
!function(a,b){"function"==typeof define&&define.amd?define(b):"object"==typeof exports?module.exports=b():a.infect=b()}(this,function(){function a(e,f){var g,h,i,j;if(!("string"==typeof e&&f&&f instanceof Object)){if("string"==typeof e&&void 0===f)return e=0===e.indexOf(c)?e.substr(c.length):e,b[e]||void 0;if("[object Object]"===d(e)&&f instanceof Array){for(g=f.length;g--;){if(h=f[g],h=0===h.indexOf(c)?h.substr(c.length):h,"string"!=typeof h)throw" :: infect.js => Keys must be strings";if(e[c+h]=a(h),void 0===e[c+h])throw" :: infect.js => Could not inject "+h}return e}if("[object Function]"===d(e)){for(f=f||{},i=/\(([^)]+)/.exec(e.toString())[1],i&&(i=i.split(/\s*,\s*/)),g=j=i.length;g--;){if(h=i[g],0!==h.indexOf(c)){i=i.slice(g+1);break}i[g]=a(h)}return function(){for(var a=Array.prototype.slice.call(arguments),b=a.length+i.length;j>b;b++)a.push(void 0);if(b>j)throw" :: infect.js => Too many parameters! I expected <= "+(j-i.length)+" but got "+a.length;a=a.concat(i),e.apply(f,a)}}throw" :: infect.js => invalid use of infect("+d(e)+", "+d(f)+")"}e=0===e.indexOf(c)?e.substr(c.length):e,b[e]=f}var b={},c="$",d=Function.prototype.call.bind(Object.prototype.toString);return a});